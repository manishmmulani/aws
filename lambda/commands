> aws lambda create-function --function-name create_menu_item --runtime python3.6 --role 

Once function is created it's arn would be (as per aws lambda function help)
arn:aws:lambda:ap-south-1:<account_id>:function:<function_name>


Lambda needs a role 'execution role' to assume which
allows service principal 'lambda.amazonaws.com' to call sts (Security Token Service) AssumeRole action 

Grant access for 'trusted' account to 'AssumeRole' on your behalf to access 'lambda service'

> aws iam create-role --role_name lambda-ex --assume-role-policy-document file://trust-policy.json

trust-policy.json
{
  "Version": "2012-07-12", // note this cannot change
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "lambda.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}

## attach policy of AWSLambdaBasicExecution to be able to access / write to cloudwatch logs
> aws iam attach-role-policy --role-name $role --policy-arn "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

# Create python file whakoo.py
# zip whakoo.zip whakoo.py

> aws iam list-roles 
-- choose the one with lambda-ex and copy the arn 
arn:aws:iam::<account_id>:role/lambda-ex

Create lambda function 
> aws lambda create-function --function-name createMenuItem --runtime python3.6 --role arn:aws:iam::<account_id>:role/lambda-ex --handler whakoo.create_menu_item --zip-file fileb://whakoo.zip --description 'Adds Menu Item to the Whakoo datastore'

Invoke lambda
> aws lambda invoke --function-name createMenuItem --cli-binary-format raw-in-base64-out --payload '{"id":1,"title":"hello"}' response.json

Monitor the logs in Cloudwatch under 'log group' -> createMenuItem

> aws lambda create-function --function-name getMenuItems --runtime python3.6 --role arn:aws:iam::<account_id>:role/lambda-ex --handler whakoo.get_menu_items --zip-file fileb://lambda/whakoo.zip --description "Retrieves existing menu items"

> aws lambda invoke --function-name getMenuItems response.json


Granting S3 to invoke a lambda function
> aws lambda add-permission --function-name createMenuItem --statement-id createMenuPermissionStatement --action "lambda:InvokeFunction" --principal s3.amazonaws.com 


Create bucket for hosting whakoo data 
> aws s3api create-bucket --bucket mulani-whakoo-data --create-bucket-configuration LocationConstraint=ap-south-1

Setup put bucket notification 
> aws s3api put-bucket-notification-configuration --bucket mulani-whakoo-data --notification-configuration file://put-bucket-notification-config.xml

{
  "LambdaFunctionConfigurations": [
    {
      "Id": "WhakooMenuItemObjectNotification",
      "LambdaFunctionArn": "arn:aws:lambda:ap-south-1:046012273693:function:createMenuItem",
      "Events": ["s3:ObjectCreated:*"],
      "Filter": {
        "Key": {
          "FilterRules": [
            {
              "Name": "prefix",
              "Value": "input-menu-list/"
            }
          ]
        }
      }
    }
  ]
}

> aws s3api put-object --bucket mulani-whakoo-data --key "input-menu-list/menu-item-1.json" --body input-menu-list/menu-item-1.json
> aws s3api put-object --bucket mulani-whakoo-data --key "input-menu-list/menu-item-2.json" --body input-menu-list/menu-item-2.json

Notice in cloudwatch logs - lambda getting invoked



